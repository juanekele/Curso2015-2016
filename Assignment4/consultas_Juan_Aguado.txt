URL Site: http://sandbox.linkeddata.es/sparql 
Data set: http://sandbox.linkeddata.es/Grado_20122013 
1.Obtener todas las clases: 
select distinct ?x 
where 
{ ?x a rdfs:Class } 
LIMIT 100 
2. Obtener las subclases de la clase Establishment 
select distinct ?x  
where  
{ ?x rdfs:subClassOf <http://GP-onto.fi.upm.es/exercise2#Establishment> }  
LIMIT 100 
3. Obtener todas las instancias de la clase City 
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#>  
Select distinct ?x 
where 
{ ?x a cc:City. } 
LIMIT 100 
4. Obtener el número de habitantes de Santiago de Compostela 
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#>  
SELECT ?habitantes  
WHERE 
{ cc:Santiago_de_Compostela cc:hasInhabitantNumber ?habitantes.} 
5. Obtener el número de habitantes de Santiago de Compostela y de Arzua 
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#>  
SELECT ?habitantesS ?habitantesA  
WHERE 
{ cc:Santiago_de_Compostela cc:hasInhabitantNumber ?habitantesS. cc:Arzua cc:hasInhabitantNumber ?habitantesA. } 
6. Obtener distintos lugares con número de habitantes, ordenar los resultados por el nombre del lugar (ascendente) 
 
 PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#>  
SELECT ?lugar ?numHabitantes WHERE {  
 ?lugar cc:hasInhabitantNumber ?numHabitantes. 
} ORDER BY ASC(?lugar) 
 
 
 
 
7. Obtener todas las instancias de Locality con su número de habitantes (si existe) 
 
 
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#>  
SELECT ?localidad ?numHabitantes WHERE {  
 ?localidad a cc:Locality; 
 cc:hasInhabitantNumber ?numHabitantes. 
} 
 
 
 
 
8. Obtener todos los lugares con más de 200.000 habitantes 
 
 
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#>  
SELECT ?lugares ?numHabitantes WHERE {  
 ?lugares cc:hasInhabitantNumber ?numHabitantes 
 FILTER(?numHabitantes > 200000)  
} 
 
 
9. Obtener los datos postales de Pazo_Breogan (calle, número, localidad, provincia) 
 
 
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#>  
SELECT ?calle ?numero ?localidad ?provincia 
WHERE {  
cc:Pazo_Breogan cc:hasAddress ?dir;  
cc:isPlacedIn ?localidad.  
?localidad cc:inProvince ?provincia.  
?dir cc:hasStreet ?calle;  
cc:hasNumber ?numero. 
} 
 
 
 
 
10. Obtener las subclases de la clase Location 
 
 
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#>  
SELECT ?subclasesLocation WHERE {  
 ?subclasesLocation rdfs:subClassOf cc:Location.  
} 
 
 
 
 
11. Obtener las instancias de la clase Locality 
 
 
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#>  
SELECT ?locality WHERE {  
 ?locality rdfs:subClassOf cc:Location.  
} 
 
 
12. Describir el recurso con rdfs:label "Madrid” 
 
DESCRIBE ?recurso WHERE{ 
?recurso rdfs:label "Madrid" 
} 
 
13. Construir el grafo RDF(S) que relaciona directamente todos los lugares turísticos con sus respectivas provincias, usando una nueva propiedad llamada ”isIn” 
 
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#> 
CONSTRUCT {?subject cc:isIn ?object} WHERE { 
 ?subject a cc:TouristicLocation; 
 cc:isPlacedIn ?pob. 
 ?pob cc:inProvince ?object.  
} 
 
14. Preguntar si hay alguna instancia de Town 
PREFIX cc: <http://GP-onto.fi.upm.es/exercise2#>  
ASK WHERE { 
 ?instance a cc:Town 
} 
 
